{
    "swagger": "2.0",
    "info": {
        "title": "Medium Rare User Service",
        "contact": {},
        "version": "0.0.1"
    },
    "paths": {
        "/v1/users": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/adapter.User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.HttpError"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "create user",
                "parameters": [
                    {
                        "description": "user info",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.CreateUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/adapter.User"
                        }
                    },
                    "400": {
                        "description": "fail to unmashal body",
                        "schema": {
                            "$ref": "#/definitions/controller.HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.HttpError"
                        }
                    }
                }
            }
        },
        "/v1/users/auth": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "authorize user",
                "parameters": [
                    {
                        "description": "user info",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.LoginUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.TokenPair"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.HttpError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/controller.HttpError"
                        }
                    }
                }
            }
        },
        "/v1/users/auth/refresh": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "refresh jwt token",
                "parameters": [
                    {
                        "description": "refresh token",
                        "name": "refresh_token",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.RefreshToken"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.AccessToken"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.HttpError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/controller.HttpError"
                        }
                    }
                }
            }
        },
        "/v1/users/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Show user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/adapter.User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.HttpError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWTToken": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "delete user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user id",
                        "schema": {
                            "type": "int"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.HttpError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/controller.HttpError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/controller.HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.HttpError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "adapter.User": {
            "type": "object",
            "properties": {
                "birth": {
                    "type": "integer",
                    "example": 1999
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-01-15T09:44:35.151+09:00"
                },
                "email": {
                    "type": "string",
                    "example": "test@example.com"
                },
                "gender": {
                    "type": "string",
                    "example": "M"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "test"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-15T09:44:35.151+09:00"
                }
            }
        },
        "controller.HttpError": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string",
                    "example": "Some error comment"
                }
            }
        },
        "domain.AccessToken": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJ0ZXN0QHRlc3QuY29tIiwibmFtZSI6InRlc3ROYW1lIiwiZ2VuZGVyIjoiTSIsImJpcnRoIjoxOTk5LCJleHAiOjE2MTA3Njk5MTksImlzcyI6ImtraCJ9.6efd8vn9BoFDgBDA9xQCph9xbXvnOaL1DTuYYgEanTQ"
                }
            }
        },
        "domain.CreateUser": {
            "type": "object",
            "properties": {
                "birth": {
                    "type": "integer",
                    "example": 1999
                },
                "email": {
                    "type": "string",
                    "example": "test@example.com"
                },
                "gender": {
                    "type": "string",
                    "example": "M"
                },
                "name": {
                    "type": "string",
                    "example": "test"
                },
                "password": {
                    "type": "string",
                    "example": "testpw"
                }
            }
        },
        "domain.LoginUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "test@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "testpw"
                }
            }
        },
        "domain.RefreshToken": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZXhwIjoxNjEwODEyNTE5LCJpc3MiOiJra2gifQ.9UPSEA_3ngl3HGcch23qXnbO7W-ghfu2Qyqyc01w368"
                }
            }
        },
        "domain.TokenPair": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJ0ZXN0QHRlc3QuY29tIiwibmFtZSI6InRlc3ROYW1lIiwiZ2VuZGVyIjoiTSIsImJpcnRoIjoxOTk5LCJleHAiOjE2MTA3Njk5MTksImlzcyI6ImtraCJ9.6efd8vn9BoFDgBDA9xQCph9xbXvnOaL1DTuYYgEanTQ"
                },
                "refresh_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZXhwIjoxNjEwODEyNTE5LCJpc3MiOiJra2gifQ.9UPSEA_3ngl3HGcch23qXnbO7W-ghfu2Qyqyc01w368"
                }
            }
        }
    },
    "securityDefinitions": {
        "JWTToken": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}